/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.10
 * Generated at: 2023-07-20 05:58:32 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.member;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class join_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/C:/workspace/jsp/workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/final_mvc_reverse_jsp/WEB-INF/lib/jakarta.servlet.jsp.jstl-3.0.1.jar!/META-INF/c-1_2.tld", Long.valueOf(1664421078000L));
    _jspx_dependants.put("/WEB-INF/lib/jakarta.servlet.jsp.jstl-3.0.1.jar", Long.valueOf(1689808285787L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/common/header.jsp", out, false);
      out.write("\r\n");
      out.write("<section class=\"wrap\">\r\n");
      out.write("<form id=\"joinForm\" action=\"joinMember.mc\" method=\"post\">\r\n");
      out.write("	<table class=\"join\">\r\n");
      out.write("		<tr>\r\n");
      out.write("			<td colspan=\"2\"><h1>회원가입</h1></td>\r\n");
      out.write("		</tr>\r\n");
      out.write("		<!-- 이름 작성 추가 -->\r\n");
      out.write("		<tr>\r\n");
      out.write("			<td>이름</td>\r\n");
      out.write("			<td><input type=\"text\" name=\"name\" autofocus required placeholder=\"이름 작성\" /></td>\r\n");
      out.write("		</tr>\r\n");
      out.write("		<tr>\r\n");
      out.write("			<td>아이디</td>\r\n");
      out.write("			<td><input type=\"text\" name=\"id\" autofocus required placeholder=\"ID 작성\" /></td>\r\n");
      out.write("		</tr>\r\n");
      out.write("		<tr>\r\n");
      out.write("			<td>비밀번호</td>\r\n");
      out.write("			<td><input type=\"password\" name=\"pass\" required placeholder=\"비밀번호 작성\"/></td>\r\n");
      out.write("		</tr>\r\n");
      out.write("		<tr>\r\n");
      out.write("			<td>비밀번호 확인</td>\r\n");
      out.write("			<td><input type=\"password\" id=\"re_pass\" required placeholder=\"비밀번호 확인\"/></td>\r\n");
      out.write("		</tr>\r\n");
      out.write("		<tr>\r\n");
      out.write("			<td>나이</td>\r\n");
      out.write("			<td><input type=\"number\" name=\"age\" required placeholder=\"나이 작성\"/></td>\r\n");
      out.write("		</tr>\r\n");
      out.write("		<tr>\r\n");
      out.write("			<td>성별</td>\r\n");
      out.write("			<td>\r\n");
      out.write("				<label>\r\n");
      out.write("					<input type=\"radio\" name=\"gender\" value=\"male\" checked/> 남성\r\n");
      out.write("				</label>\r\n");
      out.write("				<input type=\"radio\" id=\"female\" name=\"gender\" value=\"female\"/>\r\n");
      out.write("				<label for=\"female\"> 여성 </label>\r\n");
      out.write("			</td>\r\n");
      out.write("		</tr>\r\n");
      out.write("		<tr>\r\n");
      out.write("			<td colspan=2>\r\n");
      out.write("				<input type=\"button\" onclick=\"javascript:directJoin();\" value=\"회원가입\" />\r\n");
      out.write("				 | \r\n");
      out.write("				<button type=\"button\" onclick=\"javascript:directLogin();\">로그인</button>\r\n");
      out.write("			</td>\r\n");
      out.write("		</tr>\r\n");
      out.write("	</table>\r\n");
      out.write("</form>\r\n");
      out.write("</section>\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/common/footer.jsp", out, false);
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("	/* login page로 이동 */\r\n");
      out.write("	function directLogin(){\r\n");
      out.write("		location.href=\"login.mc\";\r\n");
      out.write("	}\r\n");
      out.write("\r\n");
      out.write("	/* 회원가입 요청 처리 */\r\n");
      out.write("	function directJoin(){\r\n");
      out.write("		var form = document.getElementById(\"joinForm\");\r\n");
      out.write("		var u_id = form.id;\r\n");
      out.write("		var u_pass = form.pass;\r\n");
      out.write("		var u_re_pass = document.getElementById(\"re_pass\");\r\n");
      out.write("		var u_age = form.age;\r\n");
      out.write("		\r\n");
      out.write("		if(u_id.value.length > 12 || u_id.value.length < 4){\r\n");
      out.write("			alert('아이디는 4~12글자이내에서 작성해 주세요.');\r\n");
      out.write("			u_id.value = \"\";\r\n");
      out.write("			u_id.focus();\r\n");
      out.write("		}else if(u_pass.value.length > 8 || u_pass.value.length < 4){\r\n");
      out.write("			alert('비밀번호는 4~8글자이내에서 작성해주세요.');\r\n");
      out.write("			u_pass.value=\"\";\r\n");
      out.write("			u_pass.focus();\r\n");
      out.write("		}else if(u_pass.value != u_re_pass.value){\r\n");
      out.write("			alert('비밀번호가 일치하지 않습니다.');\r\n");
      out.write("			u_re_pass.value=\"\";\r\n");
      out.write("			u_re_pass.focus();\r\n");
      out.write("		}else if(u_age.value == null || u_age.value == '' || isNaN(u_age.value)){\r\n");
      out.write("			u_age.value=\"\";\r\n");
      out.write("			u_age.focus();\r\n");
      out.write("		}else{\r\n");
      out.write("			form.submit();\r\n");
      out.write("		}\r\n");
      out.write("	}\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
